name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-test-check:
    runs-on: self-hosted
    timeout-minutes: 60
    permissions: write-all
    steps:
    - name: Get Branch Name
      id: get_branch
      run: |
        if [[ "${GITHUB_EVENT_NAME}" == "push" ]]; then
          BRANCH_NAME=${GITHUB_REF#refs/heads/}

        elif [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
          BRANCH_NAME=${GITHUB_HEAD_REF}
        fi

        echo "branch name is: $BRANCH_NAME"
        echo "branch=$BRANCH_NAME" >> $GITHUB_ENV

    - uses: actions/checkout@v4
      with:
        ref: ${{ env.branch }}

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Set up jq
      run: apt install -y jq

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

    - name: Check
      run: |
        go vet ./...
        if [ "$(go fmt ./... | wc -l)" -gt 0 ]; then
          echo "your code is not formatted correctly - run 'go fmt ./...' to fix it"
          go fmt ./...
          exit 1
        fi

    - name: Install dependencies for creating graphs
      run: |
        cd graphs
        curl -LsSf https://astral.sh/uv/install.sh | sh
        source $HOME/.local/bin/env
        uv venv
        . .venv/bin/activate
        uv pip install -r requirements.txt

    - name: Benchmark
      run: |
        cd graphs
        . .venv/bin/activate
        cd ../benchmark
        go test -bench="." -benchmem . | go run ../v1/internal/benchmark/cmd/main.go | python ../graphs/graphs.py

    - name: Commit benchmark results
      run: |
        OUTDIR="graphs/pull_request/${{ github.event.pull_request.number }}"
        echo "outdir=$OUTDIR" >> $GITHUB_ENV

        mkdir -p $OUTDIR

        mv benchmark/benchmark_marshal.svg $OUTDIR
        mv benchmark/benchmark_unmarshal.svg $OUTDIR

        git add $OUTDIR
        git commit -m "[Actions] add benchmark graphs"
        git push origin HEAD:${{ env.branch }}

    - name: Comment benchmark results
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸ‘‹ Thanks for reporting!\n![benchmark marshal](${{ env.outdir }}/benchmark_marshal.svg)'
          })
